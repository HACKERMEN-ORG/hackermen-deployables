---
- name: Deploy Docker containers and Traefik with Ansible
  hosts: myhosts
  become: yes

  tasks:
    - name: Install Docker and Docker Compose
      apt:
        name: 
          - docker.io
          - docker-compose
        state: present

    - name: Ensure Docker service is started
      service:
        name: docker
        state: started
        enabled: yes

   # - name: Clone Traefik configuration repository
   #   git:
   #     repo: https://github.com/HACKERMEN-ORG/hackermen-deployables/main/traefik.toml
   #     dest: /opt/traefik-config
   #     version: main
    - name: Create Traefik configuration directory
      file:
        path: /opt/traefik-config
        state: directory

    - name: Download traefik.toml file
      get_url:
        url: "https://raw.githubusercontent.com/HACKERMEN-ORG/hackermen-deployables/main/main/traefik.toml"
        dest: "/opt/traefik-config/traefik.toml"


    - name: Set labels dictionary for Traefik
      set_fact:
        traefik_labels:
          traefik.enable: "true"
          traefik.http.routers.traefik.rule: "Host(`traefik.system.exposed`)"
          traefik.http.routers.traefik.service: "api@internal"
          traefik.http.routers.traefik.entrypoints: "web"
         # traefik.http.routers.traefik.entrypoints: "web,websecure" # Listen on both HTTP and HTTPS entrypoints
         # traefik.http.routers.traefik.tls: "true" # Enable TLS for the router
         # traefik.http.routers.traefik.tls.certresolver: "myresolver" # Use the 'myresolver' certificate resolver

    - name: Deploy Traefik container
      docker_container:
        name: traefik
        image: traefik:v2.6
        restart_policy: always
        command: 
          - "--api.insecure=true" # Enable insecure API for dynamic configuration
          - "--providers.docker=true" # Enable Docker provider
          - "--providers.docker.exposedbydefault=false" # Do not expose all containers by default
          - "--entrypoints.web.address=:80"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /opt/traefik-config/traefik.toml:/etc/traefik/traefik.toml
        ports:
          - "80:80"
          - "8080:8080" # Traefik dashboard
        labels: "{{ traefik_labels }}"


######ORGANIZR######

    - name: Set labels dictionary for Organizr
      set_fact:
        organizr_labels:
          traefik.enable: "true"
          traefik.http.routers.organizr.rule: "Host(`system.exposed`)"
          traefik.http.routers.organizr.entrypoints: "web"

    - name: Deploy Organizr container
      docker_container:
        name: organizr
        image: organizr/organizr
        restart_policy: always
        ports:
          - "8081:80" # Expose Organizr on port 8081
        labels: "{{ organizr_labels }}"

#####FOCALBOARD#####

    - name: Set labels dictionary for Focalboard
      set_fact:
        focalboard_labels:
          traefik.enable: "true"
          traefik.http.routers.focalboard.rule: "Host(`board.system.exposed`)"
          traefik.http.routers.traefik.entrypoints: "web"

    - name: Deploy Focalboard container
      docker_container:
        name: focalboard
        image: mattermost/focalboard:latest
        restart_policy: always
        ports:
          - "8000:8000" # Expose Focalboard on port 8000
        labels: "{{ focalboard_labels }}"


#####GITEA#####
    - name: Set labels dictionary for gitea
      set_fact:
        gitea_labels:
          traefik.enable: "true"
          traefik.http.routers.mybb.rule: "Host(`git.system.exposed`)"
          traefik.http.routers.mybb.entrypoints: "web"

    - name: Deploy gitea from docker-compose
      docker_compose:
        project_src: ../docker/gitea/
        state: present

#####myBB#####
    - name: Set labels dictionary for MyBB
      set_fact:
        mybb_labels:
          traefik.enable: "true"
          traefik.http.routers.mybb.rule: "Host(`forum.system.exposed`)"
          traefik.http.routers.mybb.entrypoints: "web"

    - name: Deploy myBB from docker-compose
      docker_compose:
        project_src: ../docker/myBB/
        state: present

  #  - name: Deploy MyBB container
  #    docker_container:
  #      name: mybb
  #      image: mybb/mybb:latest
  #      restart_policy: always
  #      ports:
  #        - "8082:80" # Expose MyBB on port 8082
  #      labels: "{{ mybb_labels }}"


#    - name: Deploy other Docker containers
#      docker_compose:
#        project_src: /path/to/your/docker-compose.yml
#        state: present
