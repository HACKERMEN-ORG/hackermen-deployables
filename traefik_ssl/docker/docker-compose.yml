---
# -- (Optional) When using a custom network
# networks:
#   your-traefik-network:
#     external: true
services:
  traefik:
    image: docker.io/library/traefik:v3.0.0
    container_name: traefik
    ports:
      - 80:80
      - 443:443
      # -- (Optional) Enable Dashboard, don't do in production
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/traefik-config/traefik.yml:/etc/traefik/traefik.yml
     # - ./config/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./config/conf/:/etc/traefik/conf/
      - ./config/certs/:/etc/traefik/certs/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard-subdomain.overflow.no`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=staging"
      - "traefik.http.routers.dashboard.middlewares=dashboardAuth"
      - "traefik.http.middlewares.dashboardAuth.basicauth.users=user:$$xx$$xx$$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      - "traefik.http.routers.httpCatchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.httpCatchall.entrypoints=http"
      - "traefik.http.routers.httpCatchall.middlewares=httpsRedirect"
      - "traefik.http.middlewares.httpsRedirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.httpsRedirect.redirectscheme.permanent=true"
    # -- (Optional) When using Cloudflare as Cert Resolver
    # environment:
    #   - CF_DNS_API_TOKEN=your-cloudflare-api-token
    # -- (Optional) When using a custom network
    # networks:
    #   - your-traefik-network
    restart: unless-stopped